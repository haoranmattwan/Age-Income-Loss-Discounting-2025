---
title: "Age, Income, and the Discounting of Delayed Monetary Losses"
author: "Haoran (Matt) Wan"
date: "today"
format: 
  html:
    toc: true
    code-fold: true
    self-contained: true
engine: knitr
---

## Introduction

This document contains the R code to replicate the analyses from the publication:

> Wan, H., Myerson, J., Green, L., Strube, M. J., & Hale, S. (2025). Age, income, and the discounting of delayed monetary losses. *The Journals of Gerontology, Series B: Psychological Sciences and Social Sciences, 80*(11), gbaf162. https://doi.org/10.1093/geronb/gbaf162

The analyses examine the effects of age and income on the degree to which adults discount delayed monetary losses, testing a "buffering hypothesis." The workflow includes a simulation-based power analysis, data processing, and a series of Bayesian multilevel beta regressions to model the Area under the Curve (AuC) as the primary measure of discounting.

The data for this study are available in the Supplementary Material at the publisher's website.

```{r setup_packages}
#| message: false
#| warning: false

# --- Load All Packages ---
library(psych)
library(rprojroot)
library(minpack.lm)
library(lme4)
library(glmmTMB)
library(multcomp)
library(modelr)
library(here)
library(brms)
library(cmdstanr)
library(emmeans)
library(tidybayes)
library(bayestestR)
library(Hmisc)
library(doSNOW)
library(lemon)
library(tidyverse)
library(ggpubr)
```

```{r setup_functions}
#| message: false
#| warning: false

# --- Custom Functions ---

# Custom ggplot2 Theme
mattheme <- theme(
  text = element_text(size = 12, family = "Arial", color = "black", face = "bold"), 
  axis.text.y = element_text(colour = "black", size = 10, face = "bold"), 
  axis.text.x = element_text(colour = "black", size = 10, face = "bold", angle = 0), 
  axis.title.x = element_text(margin = margin(7, 0, 0, 0), size = 14), 
  axis.title.y = element_text(margin = margin(0, 7, 0, 0), size = 14), 
  plot.title = element_text(size = 14, face = "bold", hjust = 0.5), 
  panel.background = element_rect(fill = "white", linetype = 1, color = "black", size = 1), 
  panel.grid = element_blank(),
  strip.background = element_blank(),
  strip.text = element_text(size=10),
  legend.key = element_blank()
)

# Area Under the Curve Calculation
auc <- function(x, y) {
  sum(diff(x) * (y[-1] + y[-length(y)])) / 2
}

# Wrapper for brms Beta Regression Models
betaMLM_brm <- function(Formula, Data, File = NULL) {
  brm(formula = Formula, 
      family = Beta(), data = Data, 
      prior = c(prior(normal(0, 100^100), class = Intercept), 
                prior(cauchy(0, 2.5), class = b),
                prior(cauchy(0, 2.5), class = sd),
                prior(normal(0, 100^100), class = phi)),
      iter = 4000, warmup = 2000, chains = 4, cores = 4, refresh = 0,
      backend = "cmdstanr", control = list(adapt_delta=0.95, max_treedepth=10), 
      file = File)
}

# CORRECTED: Full brm_summary function from Function.R
brm_summary <- function(brm_model, rownames = NULL) {
  suppressWarnings(trans_brms <- brm_model |>
                     gather_draws(`b_.*`, regex = TRUE) |> 
                     select(.variable, .value) |>
                     group_by(.variable) |> 
                     mutate(pd = ecdf(.value)(0),
                            pd = ifelse(pd >= .5, pd, 1 - pd)) |> 
                     group_by(.variable, pd) |>
                     summarise(SE = sd(.value), .value = median(.value), .groups = 'drop') |>
                     select(.variable, .value, SE, pd) |>
                     mutate(.variable = factor(.variable, levels = as.data.frame(p_direction(brm_model))$Parameter)) |>
                     arrange(.variable) |>
                     mutate(across(.cols = -.variable, ~sprintf("%.3f", round(., 3)))) |>
                     mutate(across(c(.value, SE, pd), ~str_replace(., "0.", "."))) |>
                     mutate(pd = str_replace(pd, "1.000", ">.999")) |>
                     mutate(.variable = str_remove_all(.variable, "b_|_std|_c")) |>
                     mutate(SE = paste0("(", SE, ")")) |>
                     rename(Variable = .variable, "Est." = .value) |>
                     unite("Est.(SE)", "Est.", "SE", sep = " ") |>
                     column_to_rownames("Variable"))
  
  if (!is.null(rownames)) {
    rownames(trans_brms) <- rownames
  }
  
  return(as.data.frame(trans_brms))
}

# Power Analysis Simulation Function
SimPower_MLM <- function(n_ID, beta0 = 0, beta1, beta2, phi = 12.2, sigma = .944, n_sim) {
  # (Function body from Function.R)
  cl <- makeCluster(4)
  registerDoSNOW(cl)
  pb <- txtProgressBar(min = 0, max = n_sim, style = 3)
  progress <- function(n) setTxtProgressBar(pb, n)
  opts <- list(progress = progress)
  
  sim_results <- foreach(i=(1:n_sim), .combine=rbind, .packages = c("glmmTMB","tidyverse"), .options.snow = opts) %dopar% {
    group_ids <- rep(seq_len(n_ID*6), each = 3)
    Age <- rep(c(runif(n_ID,20,29),runif(n_ID,30,39),runif(n_ID,40,49),
                 runif(n_ID,50,59),runif(n_ID,60,69),runif(n_ID,70,80)), each = 3)
    Income <- rep(rbinom(n_ID*6,4,.5), each = 3) + 1
    eta <- numeric(n_ID*3*6)
    b <- rnorm(n_ID*6, mean = 0, sd = sigma)
    for (g in seq_len(n_ID * 6)) {
      idx <- which(group_ids == g)
      eta[idx] <- beta0+b[g] + (beta1/(2*sd(Age)))*Age[idx] + (beta2/(2*sd(Income)))*Income[idx]
    }
    mu <- plogis(eta)
    AuC <- rbeta(n_ID*3*6, mu * phi, (1 - mu) * phi)
    AuC[AuC == 1] <- 1 - .Machine$double.eps
    
    sim_dat <- data.frame(ID = factor(group_ids), Age = Age, Income = Income, AuC = AuC)
    SimDat20_80 <- mutate(sim_dat, Age_std = (Age - mean(Age)) / (2*sd(Age)))
    SimDat35_80 <- mutate(filter(sim_dat, Age >= 35),
                          Age_std = (Age - mean(Age)) / (2*sd(Age)),
                          Income_std = (Income - mean(Income)) / (2*sd(Income)))
    SimDatHghInc <- mutate(filter(sim_dat, Age >= 35 & Income >= 4),
                           Age_std = (Age - mean(Age)) / (2*sd(Age)))
    tryCatch({
      fit1 <- glmmTMB(AuC ~ 1 + Age_std + (1 | ID), family = beta_family(), data = SimDat20_80)
      fit2 <- glmmTMB(AuC ~ 1 + Age_std + Income_std + (1 | ID), family = beta_family(), data = SimDat35_80)
      fit3 <- glmmTMB(AuC ~ 1 + Age_std + (1 | ID), family = beta_family(), data = SimDatHghInc)
      c(summary(fit1)$coefficients$cond["Age_std","Pr(>|z|)"], 
        summary(fit2)$coefficients$cond["Age_std","Pr(>|z|)"],
        summary(fit2)$coefficients$cond["Income_std","Pr(>|z|)"],
        summary(fit3)$coefficients$cond["Age_std","Pr(>|z|)"])
    }, error = function(e) {c(NA,NA,NA,NA)})
  }
  close(pb)
  stopCluster(cl)
  c(mean(sim_results[,1] < 0.05, na.rm = TRUE),
    mean(sim_results[,2] < 0.05, na.rm = TRUE),
    mean(sim_results[,3] < 0.05, na.rm = TRUE),
    mean(sim_results[,4] < 0.05, na.rm = TRUE))
}
```

```{r setup_data}
#| message: false
#| warning: false

# --- Data Loading and Processing ---
Samp <- read_csv("R code/dat/Lifespan.csv") |> select(-1)
Disc_Raw <- filter(Samp, type == "delay" & task == "loss") |>
  filter(!is.na(age), age >= 20, age <= 80, check == 6, !is.na(sex)) |>
  filter(age-10*age_grp >= 0 & age-10*age_grp <= 10) |>
  mutate(age_grp_factor = factor(case_when(
              age >= 20 & age < 35 ~ "20-34",
              age >= 35 & age <= 50 ~ "35-50",
              age > 50 & age < 65 ~ "51-64",
              age >= 65 & age <= 80 ~ "65-80"), 
              levels = c("20-34","35-50","51-64","65-80"))) |>
  select(-c(task,month,year,white,hislat,duration,check, age_grp)) |>
  rename(Exp = type, ID = id, Amount = amt, Delay = iv, SV = value, Age = age, 
         Income = income, Gender = sex, Depression = depress, Anxiety = anxious, 
         Distress = hads, Education = edu, Health = health, Age_Group = age_grp_factor, 
         Ethnicity = eth, Race = race)

# Group-Level Data Frame for Plotting
Disc_Grp <- Disc_Raw |>
  mutate(Amount = factor(if_else(Amount==1, "$150", if_else(Amount==3, "$30,000", "$2,500")), 
                          levels = c("$150", "$2,500", "$30,000"))) |>
  group_by(Age_Group, Amount, Delay) |> 
  summarise(Mean_SV = mean(SV), .groups = 'drop')

# Individual-Level Data Frame
Disc_ID <- Disc_Raw |>
  mutate(Education = case_when(Education == 1 ~ 5, Education == 2 ~ 12, Education == 3 ~ 14,  
                               Education == 4 ~ 16, Education == 5 ~ 18),
         Amount_log = log(if_else(Amount==1, 150, if_else(Amount==3, 30000, 2500))))

# Calculate Area under the Curve
AuC_ID <- Disc_ID |>
  group_by(ID, Amount) |>
  summarise(AuC = auc(Delay/max(Delay), SV), .groups = 'drop') |>
  # Join back demographic info
  left_join(distinct(Disc_ID, ID, Age, Age_Group, Income, Gender, Education, 
                     Distress, Anxiety, Depression, Health), by = "ID")

# Create Model-Specific Dataframes with Scaled Predictors
DL_dat0 <- AuC_ID |> mutate(Age_std = (Age - mean(Age)) / (2*sd(Age)))
DL_dat1 <- filter(AuC_ID, Age >= 35) |> mutate(Age_std = (Age - mean(Age)) / (2*sd(Age)))
DL_dat2 <- filter(AuC_ID, Age >= 35, !is.na(Income)) |>
  mutate(Age_std = (Age - mean(Age)) / (2*sd(Age)),
         Income_std = (Income - mean(Income)) / (2*sd(Income)))
DL_dat3 <- filter(AuC_ID, Age >= 35, !is.na(Income), !is.na(Distress)) |>
  mutate(Age_std = (Age - mean(Age)) / (2*sd(Age)),
         Income_std = (Income - mean(Income)) / (2*sd(Income)),
         Anxiety_std = (Anxiety - mean(Anxiety)) / (2*sd(Anxiety)))
DL_dat4 <- filter(AuC_ID, Age >= 35, !is.na(Income), !is.na(Gender), 
                  !is.na(Education), !is.na(Distress), !is.na(Health)) |>
  mutate(Age_std = (Age - mean(Age)) / (2*sd(Age)),
         Amount_std = (Amount - mean(Amount)) / (2*sd(Amount)),
         Income_std = (Income - mean(Income)) / (2*sd(Income)),
         Gender_c = Gender - mean(Gender),
         Education_std = (Education - mean(Education)) / (2*sd(Education)),
         Anxiety_std = (Anxiety - mean(Anxiety)) / (2*sd(Anxiety)),
         Health_std = (Health - mean(Health)) / (2*sd(Health)))

print("Data processing complete.")
```

---

## Power Analysis

A simulation-based power analysis was conducted to ensure adequate sample size for detecting small-to-medium effects of Age and Income using multilevel beta regression.

```{r power_analysis}
#| cache: true

if (file.exists("power.rds")) {
  pow_est <- readRDS("power.rds")
} else {
  pow_est <- SimPower_MLM(n_ID = 100, beta1 = log(1.5), beta2 = log(1.5), n_sim = 5000)
  saveRDS(pow_est, file = "power.rds")
}

as.data.frame(pow_est) |>
  mutate(
    Coefficient = c("Age (20-80)", "Age (35-80)", "Income", "Age (Income >= $80K)"),
    Power = sprintf("%.3f", pow_est)
  ) |>
  select(Coefficient, Power)
```

---

## Group-Level Descriptive Analyses

This section visualizes the group-level discounting functions, reports the goodness-of-fit (R-squared) for the hyperboloid model, and tests for the amount effect.

```{r group_analysis}
#| fig-cap: "Figure 1 Replication: Relative subjective value as a function of delay for each payment amount and age group."

# Plot Discounting Functions
Disc_Grp |>
  arrange(desc(Amount)) |>
  ggplot(aes(Delay, Mean_SV, shape = Amount, fill = Amount, color = Amount, linetype = Amount)) +
  geom_smooth(method = "nlsLM", formula = y ~ 1 / (1 + exp(k)*x)^b,
              method.args = list(start = list(k = -4, b = .5)),
              se = FALSE, size = .7, show.legend = FALSE) +
  geom_point(size = 3, stroke = .5, color = "black") +
  scale_y_continuous(limits = c(-.005, 1.005), breaks=seq(0,1,by=0.2), expand=c(0,0)) +
  scale_x_continuous(limits = c(-10, 130), expand=c(0,0)) +
  facet_wrap(~Age_Group, nrow = 1) +
  scale_linetype_manual(values = c("dotted", "dashed", "solid")) +  
  scale_fill_manual(name = "Amount", values = c("$30,000"="#1f78b4","$2,500"= "#ff7f00","$150"="#33a02c")) +
  scale_color_manual(name = "Amount", values = c("$30,000"="#1f78b4","$2,500"= "#ff7f00","$150"="#33a02c")) +
  scale_shape_manual(name="Amount", values = c("$150" = 22, "$2,500" = 24, "$30,000" = 21)) + 
  labs(x = "Delay (months)", y = "Relative Subjective Value") +
  theme_bw() + mattheme

# R-squared for group fits
cat("--- R-squared for Group-Level Hyperboloid Fits ---\n")
Disc_Grp |>
  group_by(Age_Group, Amount) |>
  reframe(R2 = rsquare(nlsLM(Mean_SV ~ 1 / (1 + k * Delay)^s, 
                             data = pick(everything()), start = list(k = .1, s = 1)), 
                       data = pick(everything()))) |>
  pivot_wider(names_from = Age_Group, values_from = R2) |> 
  print(digits = 4)

# Amount effect tests
cat("\n--- P-values for Amount Effect within each Age Group ---\n")
AuC_ID |>
  group_by(Age_Group) |>
  reframe(p_val = summary(glht(
    glmmTMB(AuC ~ as.factor(Amount) + (1|ID), data = pick(everything()), family = beta_family()), 
    linfct = matrix(c(-1, 1, 0), nrow = 1)))$test$pvalues[1]
  ) |>
  pivot_wider(names_from = Age_Group, values_from = p_val) |>
  print(digits = 4)
```

---

## Reliability and Correlational Analyses

This section examines the internal consistency of the AuC measure across different amounts and presents the correlation matrix for all key variables for participants aged 35 and older.

```{r correlations}
# --- Reliability of AuC (Cronbach's Alpha) ---
cat("--- Reliability of AuC Measure (Cronbach's Alpha) ---\n")
reliability_df <- pivot_wider(AuC_ID[,c("ID", "Amount", "AuC")], names_from = Amount, values_from = AuC)
print(psych::alpha(reliability_df[,-1]))


# --- Correlation Matrix for participants 35+ ---
cat("\n--- Correlation Matrix for Participants Aged 35-80 ---\n")
Cor_df <- AuC_ID |>
  filter(Age >= 35) |>
  group_by(ID) |>
  summarise(across(c(Age, Income, Education, Gender, Distress, Anxiety, Depression, Health, AuC), mean, na.rm=TRUE)) |>
  ungroup() |>
  select(Age, Income, Education, Gender, Distress, Anxiety, Depression, Health, AuC)

# Using Hmisc::rcorr for p-values
corr_matrix <- rcorr(as.matrix(Cor_df))
print(round(corr_matrix$r, 3))
```

---

## Hypothesis Testing: Bayesian Multilevel Models

This section presents the results from a series of Bayesian multilevel beta regressions testing the effects of age, income, and other covariates on the discounting of delayed losses.

```{r main_models}
#| cache: true
#| tbl-cap: "Table 3 Replication: Bayesian Beta Regression Model Results for participants aged 35-80."
#| results: 'hold'

# --- Model 1: AuC ~ Age ---
cat("--- Model 1: AuC ~ Age + Age^2 ---\n")
DL_mod1b <- betaMLM_brm(Formula = bf(AuC ~ Age_std + I(Age_std^2) + (1 | ID)), 
                        Data = DL_dat1, File = "R code/07-28-25/brm/DL_mod1b")
print(brm_summary(DL_mod1b))

# --- Model 2: AuC ~ Age + Income ---
cat("\n--- Model 2: AuC ~ Age + Age^2 + Income ---\n")
DL_mod2 <- betaMLM_brm(Formula = bf(AuC ~ Age_std + I(Age_std^2) + Income_std + (1|ID)), 
                       Data = DL_dat2, File = "R code/07-28-25/brm/DL_mod2")
print(brm_summary(DL_mod2))

# --- Model 3: AuC ~ Age + Income + Anxiety ---
cat("\n--- Model 3: AuC ~ Age + Age^2 + Income + Anxiety ---\n")
DL_mod3 <- betaMLM_brm(Formula = bf(AuC ~ Age_std + I(Age_std^2) + Income_std + Anxiety_std + (1|ID)), 
                       Data = DL_dat3, File = "R code/07-28-25/brm/DL_mod3")
print(brm_summary(DL_mod3))

# --- Model 4: Full Model with Interactions ---
cat("\n--- Model 4: Full Model with Covariates and Age Interactions ---\n")
DL_mod4 <- betaMLM_brm(
  Formula = bf(AuC ~ (Age_std + Income_std + Anxiety_std + Amount_std + 
                      Education_std + Gender_c + Health_std)^2 + I(Age_std^2) + 
                      (1 + Amount_std | ID)), 
  Data = DL_dat4, File = "R code/07-28-25/brm/DL_mod4"
)
print(brm_summary(DL_mod4))
```

---

## Visualizing Key Interactions

The following plots visualize the significant interactions from the full model (Model 4), showing how the effect of age on discounting is moderated by income and the magnitude of the loss.

```{r interaction_plots}
#| fig-cap: "Figure 4 Replication. Left: AuC as a function of age for three income levels. Right: AuC as a function of age for three loss amounts."
#| warning: false

# --- Age x Income Interaction Plot (p4 from original script) ---
# Create prediction grid for the Age x Income interaction
pred_grid_income <- expand(DL_dat4, Age = seq(35, 80, 1),
                           Income_std = unique(Income_std),
                           Amount_std = 0, Education_std = 0, Gender_c = 0, 
                           Anxiety_std = 0, Health_std = 0) |>
  mutate(Age_std = (Age - mean(DL_dat4$Age)) / (2*sd(DL_dat4$Age)),
         # Manually create Income factor to match original structure
         Income = rep(c("<$50K","<$50K","$50-80K",">$80K",">$80K"), times = 46),
         Income = factor(Income, levels = c(">$80K","$50-80K","<$50K")))

# Generate and summarize posterior predictions
p_income <- add_epred_draws(DL_mod4, newdata = pred_grid_income, re_formula = NA) |>
  group_by(Age, Income, .draw) |> 
  summarise(.epred = mean(.epred), .groups = 'drop') |> # Average over income_std levels within each draw
  group_by(Age, Income) |> 
  summarize(.epred = median(.epred), .groups = 'drop') |>
  ggplot(aes(x = Age, y = .epred, fill = Income, color = Income)) +
  geom_line(aes(linetype = Income), size = 1) +
  labs(x = "Age", y = "Area under the Curve", color = "Income", fill = "Income", linetype = "Income") + 
  scale_y_continuous(limits = c(.198, 1.002), breaks = seq(.2,1,.2), expand = c(0,0),
                     sec.axis = sec_axis(~ . * 1, breaks=seq(0,1,by=0.2))) +
  scale_x_continuous(limits = c(33.5,81.5), breaks = seq(35,80,15), expand = c(0,1)) +
  scale_color_manual(values = c(">$80K"="#b15928","$50-80K"="#6a3d9a","<$50K"="#e31a1c")) +
  scale_fill_manual(values = c(">$80K"="#b15928","$50-80K"="#6a3d9a","<$50K"="#e31a1c")) +
  scale_linetype_manual(values = c(">$80K"="solid","$50-80K"="dashed","<$50K"="dotted")) +  
  theme_bw() + mattheme + 
  theme(legend.position = c(.77, .23))


# --- Age x Amount Interaction Plot (p3 from original script) ---
# Create prediction grid for the Age x Amount interaction
pred_grid_amount <- expand(DL_dat4, Age = seq(35, 80, 1),
                           Amount_std = unique(Amount_std),
                           Income_std = 0, Education_std = 0, Gender_c = 0, 
                           Anxiety_std = 0, Health_std = 0) |>
  mutate(
    ID = 0,
    Age_std = (Age - mean(DL_dat4$Age)) / (2*sd(DL_dat4$Age)),
    Amount = factor(rep(c("$150", "$2,500", "$30,000"), times = 46),
                    levels = c("$150", "$2,500", "$30,000"))
  )

# Generate and summarize posterior predictions
p_amount <- add_epred_draws(DL_mod4, newdata = pred_grid_amount, re_formula = NA) |> 
  group_by(Age, Amount) |> 
  summarize(.epred = median(.epred), .groups = 'drop') |>
  ggplot(aes(x = Age, y = .epred, group = Amount, color = Amount)) +
  geom_line(aes(linetype = Amount), size = 1) +  
  labs(x = "Age", y = "Area under the Curve", color = "Amount", linetype = "Amount") + 
  scale_y_continuous(limits = c(.198, 1.002), breaks = seq(.2,1,.2), expand = c(0,0),
                     sec.axis = sec_axis(~ . * 1, breaks = seq(0,1,by=0.2))) +
  scale_x_continuous(limits = c(33.5,81.5), breaks = seq(35,80,15), expand = c(0,1)) +
  scale_linetype_manual(values = c("$30,000"="solid","$2,500"="dashed","$150"="dotted")) +  
  scale_color_manual(values = c("$30,000"="#1f78b4","$2,500"= "#ff7f00","$150"="#33a02c")) +
  theme_bw() + mattheme + 
  theme(legend.position = c(.77, .23))

# Arrange and display plots
ggarrange(p_income, p_amount, ncol = 2, common.legend = FALSE)
```
